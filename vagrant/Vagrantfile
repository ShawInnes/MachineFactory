# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.box = "../boxes/windows_2012_r2-1.0.6.box"

  config.vm.hostname = "servervm"

  config.vm.guest = :windows
  config.vm.communicator = "winrm"

  config.winrm.port = 5985
  config.winrm.guest_port = 5985
  config.winrm.username = "packer"
  config.winrm.password = "packer"

  config.vm.network :forwarded_port,   guest: 3389, host: 3399,       id: "rdp",   auto_correct: false
  config.vm.network :forwarded_port,   guest: 5985, host: 5985,       id: "winrm", auto_correct: false

  config.vm.provider "vmware_fusion" do |v|
    v.gui = true
    v.vmx["memsize"] = "2048"
    v.vmx["numvcpus"] = "2"
    v.vmx["ethernet0.virtualDev"] = "e1000"
    v.vmx["ethernet0.connectionType"] = "nat"
    v.vmx["gui.fitguestusingnativedisplayresolution"] = "FALSE"
  end  

  config.vm.network "public_network"

  config.vm.provision "proxy", type: "shell" do |s|
    s.path = "scripts/proxy-disable.ps1"
  end
 
  config.vm.provision "wmf", type: "shell" do |s|
$script = <<SCRIPT
    $configContent = Get-Content ${env:ProgramData}\\Chocolatey\\config\\chocolatey.config | ForEach-Object { $_ -replace "<cacheLocation />", "<cacheLocation>\\vagrant</cacheLocation>" }
    Set-Content ${env:ProgramData}\\Chocolatey\\config\\chocolatey.config -Value $configContent

    choco upgrade powershell --pre

    Restart-Computer -Force
SCRIPT

    s.inline = $script
  end

  config.vm.provision "dev", type: "shell" do |s|
$script = <<SCRIPT
    choco install notepadplusplus
    choco install git.install
    choco install googlechrome
SCRIPT

    s.inline = $script
  end

  config.vm.provision "psget", type: "shell" do |s|
$script = <<SCRIPT
    # Get-PackageProvider -Name NuGet -ForceBootstrap

    # Register-PsRepository -Name PSGallery -SourceLocation http://www.powershellgallery.com/api/v2/
    # Set-PSRepository -Name PSGallery -InstallationPolicy Trusted

    Write-Output "Installing DSC Module xNetworking"
    Install-Module -Name xNetworking -Repository PSGallery

    Write-Output "Installing DSC Module xPSDesiredStateConfiguration"
    Install-Module -Name xPSDesiredStateConfiguration -Repository PSGallery

    Write-Output "Installing DSC Module xWebAdministration"
    Install-Module -Name xWebAdministration -Repository PSGallery

    Write-Output "Installing DSC Module xSystemSecurity"
    Install-Module -Name xSystemSecurity -Repository PSGallery

    Write-Output "Installing DSC Module xTimeZone"
    Install-Module -Name xTimeZone -Repository PSGallery
SCRIPT

    s.inline = $script
  end

  config.vm.provision "octopus", type: "shell" do |s|
$script = <<SCRIPT
    choco install octopusdeploy
    choco install octopusdeploy.tentacle
    choco install octopustools
SCRIPT

    s.inline = $script
  end

  config.vm.provision "octopus-server", type: "shell" do |s|
    s.path = "scripts/octopus-server.ps1"
  end

  config.vm.provision "octopus-tentacle", type: "shell" do |s|
    s.path = "scripts/octopus-tentacle.ps1"
  end

  config.vm.provision "dsc", type: "dsc" do |dsc|
    dsc.manifests_path = "manifests" 
    dsc.configuration_file = "MyWebsite.ps1"
    dsc.configuration_data_file  = "manifests/MyConfig.psd1"
    dsc.configuration_name = "MyWebsite"
    dsc.configuration_params = {"-MachineName" => "localhost"}
    dsc.temp_dir = "c:/tmp/vagrant-dsc"
  end 

  config.vm.provision "dsc-tentacle", type: "dsc" do |dsc|
    dsc.manifests_path = "manifests" 
    dsc.configuration_file = "MyOctopus.ps1"
    dsc.configuration_data_file  = "manifests/MyConfig.psd1"
    dsc.configuration_name = "MyOctopus"
    dsc.configuration_params = {
      "-ApiKey" => "API-ABCDEF1234567791",
      "-OctopusServerUrl" => "http://localhost/",
      "-Environments" => "@(\"Development\")",
      "-Roles" => "@(\"web-server\")"
    }
    dsc.temp_dir = "c:/tmp/vagrant-dsc"
  end 
end
